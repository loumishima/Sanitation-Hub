result <- grepl(pattern = pattern[i], values[i])
print(result)
if(result == FALSE){
return(pattern[i])
}
}
return(TRUE)
}
pattern <- c('city', 'lat', 'lon', 'mob', 'users', 'fill', 'water', 'toilet', 'basin')
values <- c('a', 'b', 'c')
result <- check_colnames(values = values, pattern = pattern)
pattern[1]
values[1]
result <- grepl(pattern = pattern[1], values[1])
result <- grepl(pattern = pattern[1], values[1])
result == FALSE
range(pattern)
range(1:length(pattern))
range(1,length(pattern))
seq(1, length(pattern))
check_colnames <- function(values, pattern) {
for (i in seq(1:length(pattern))) {
result <- grepl(pattern = pattern[i], values[i])
print(result)
if(result == FALSE){
return(pattern[i])
}
}
return(TRUE)
}
pattern <- c('city', 'lat', 'lon', 'mob', 'users', 'fill', 'water', 'toilet', 'basin')
values <- c('a', 'b', 'c')
result <- check_colnames(values = values, pattern = pattern)
result
runApp('Documents/Sanitation-Hub')
shiny::runApp('Documents/Sanitation-Hub')
runApp('Documents/Sanitation-Hub')
shiny::runApp('Documents/Sanitation-Hub')
shiny::runApp('Documents/Sanitation-Hub')
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(python.reticulate = TRUE)
library(dplyr)
library(ggplot2)
library(reticulate)
use_condaenv("Deep_Learning")
setwd("/Users/gather3/Documents/General Coding/NFL Data Analysis")
NFL <- read_csv("nfl.csv", na = "--")
setwd("/Users/gather3/Documents/General Coding/NFL Data Analysis")
NFL <- read.csv("nfl.csv", na = "--")
View(NFL)
setwd("/Users/gather3/Documents/General Coding/NFL Data Analysis")
NFL <- read.csv("nfl.csv", na = "--")
NFL <- NFL %>% select(-c(X1, Lng))
View(NFL)
setwd("/Users/gather3/Documents/General Coding/NFL Data Analysis")
NFL <- read.csv("nfl.csv", na = "--")
NFL <- NFL %>% select(-c(X, Lng))
NFLSimplified <- NFL %>%  select(c(Att, Comp, Pct, Yds, TD, Int))
NFL_CI95 <- data.frame(apply(NFLSimplified, 2, CI))
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(python.reticulate = TRUE)
library(dplyr)
library(ggplot2)
library(Rmisc)
library(reticulate)
use_condaenv("Deep_Learning")
NFLSimplified <- NFL %>%  select(c(Att, Comp, Pct, Yds, TD, Int))
NFL_CI95 <- data.frame(apply(NFLSimplified, 2, CI))
NFL_CI90 <- data.frame(apply(NFLSimplified, 2, function(x) CI(x, ci = 0.90)))
View(NFL_CI90)
View(NFL_CI90)
NFLSimplified <- NFL %>%  select(c(Att, Comp, Pct, Yds, TD, Int))
NFL_CI95 <- data.frame(apply(NFLSimplified, 2, CI))
NFL_CI90 <- data.frame(apply(NFLSimplified, 2, function(x) CI(x, ci = 0.90)))
plots_dist <- function(df, att) {
ggplot(data = df, aes(x = att)) %>%
geom_histogram(aes(y = ..density..), binwidth = .5, colour = "blue", fill = "white") +
geom_density(alpha = .2, fill="#B10048") +
geom_vline(aes(xintercept = mean(att, na.rm = T)),
colour = "red", linetype ="longdash", size = .8))
plots_dist <- function(df, att) {
ggplot(data = df, aes(x = att)) %>%
geom_histogram(aes(y = ..density..), binwidth = .5, colour = "blue", fill = "white") +
geom_density(alpha = .2, fill="#B10048") +
geom_vline(aes(xintercept = mean(att, na.rm = T)),
colour = "red", linetype ="longdash", size = .8)
}
plots_dist(NFLSimplified, "Yds")
plots_dist <- function(df, att) {
ggplot(data = df, aes(x = att)) +
geom_histogram(aes(y = ..density..), binwidth = .5, colour = "blue", fill = "white") +
geom_density(alpha = .2, fill="#B10048") +
geom_vline(aes(xintercept = mean(att, na.rm = T)),
colour = "red", linetype ="longdash", size = .8)
}
plots_dist(NFLSimplified, "Yds")
plots_dist <- function(df, att) {
ggplot(data = df, aes(x = att)) +
geom_histogram(aes(y = ..density..), binwidth = .5, colour = "blue", fill = "white", stat = 'count') +
geom_density(alpha = .2, fill="#B10048") +
geom_vline(aes(xintercept = mean(att, na.rm = T)),
colour = "red", linetype ="longdash", size = .8)
}
plots_dist(NFLSimplified, "Yds")
plots_dist <- function(df, att) {
plot <-ggplot(data = df, aes(x = att)) +
geom_histogram(aes(y = ..density..), binwidth = .5, colour = "blue", fill = "white", stat = 'count') +
geom_density(alpha = .2, fill="#B10048") +
geom_vline(aes(xintercept = mean(att, na.rm = T)),
colour = "red", linetype ="longdash", size = .8)
return(plot)
}
plots_dist(NFLSimplified, "Yds")
plots_dist <- function(df, att) {
plot <-ggplot(data = df, aes(x = att)) +
geom_histogram(aes(y = ..density..), binwidth = .5, colour = "blue", fill = "white", stat = 'count') +
geom_density(alpha = .2, fill="#B10048") +
geom_vline(aes(xintercept = mean(att, na.rm = T)),
colour = "red", linetype ="longdash", size = .8)
return(plot)
}
x <- plots_dist(NFLSimplified, "Yds")
plots_dist <- function(df, att) {
plot <-ggplot(data = df, aes(x = att)) +
geom_histogram(aes(y = ..density..), binwidth = .5, colour = "blue", fill = "white", stat = 'count') +
geom_density(alpha = .2, fill="#B10048") +
geom_vline(aes(xintercept = mean(att, na.rm = T)),
colour = "red", linetype ="longdash", size = .8)
return(plot)
}
x <- plots_dist(NFLSimplified, "Yds")
x
View(NFL)
View(NFLSimplified)
plots_dist <- function(df, att) {
plot <-ggplot(data = df, aes(x = att)) +
geom_histogram(aes(y = ..density..), binwidth = .5, colour = "blue", fill = "white", stat = 'count') +
geom_density(alpha = .2, fill="#B10048") +
geom_vline(aes(xintercept = mean(att, na.rm = T)),
colour = "red", linetype ="longdash", size = .8)
return(plot)
}
x <- plots_dist(NFLSimplified, NFLSimplified$Yds)
x
plots_dist <- function(df, att) {
plot <-ggplot(data = df, aes(x = att)) +
geom_histogram(aes(y = ..density..), binwidth = .5, colour = "blue", fill = "white", stat = 'count') +
geom_density(alpha = .2, fill="#B10048") +
geom_vline(aes(xintercept = mean(att, na.rm = T)),
colour = "red", linetype ="longdash", size = .8)
return(plot)
}
x <- plots_dist(NFLSimplified, NFLSimplified$Yds)
plots_dist <- function(df, att) {
plot <-ggplot(data = df, aes(x = att)) +
geom_histogram(aes(y = ..density..), binwidth = .5, colour = "blue", fill = "white", stat = 'count') +
geom_density(alpha = .2, fill="#B10048") +
geom_vline(aes(xintercept = mean(att, na.rm = T)),
colour = "red", linetype ="longdash", size = .8)
return(plot)
}
x <- plots_dist(NFLSimplified, NFLSimplified$Yds)
x
plots_dist <- function(df, att) {
plot <-ggplot(data = df, aes(x = att)) +
geom_histogram(aes(y = ..density..), binwidth = .5, colour = "blue", fill = "white", stat = 'count') +
geom_density(alpha = .2, fill="#B10048") +
geom_vline(aes(xintercept = mean(att, na.rm = T)),
colour = "red", linetype ="longdash", size = .8)
return(plot)
}
x <- plots_dist(NFLSimplified, NFLSimplified$Comp)
x
plots_dist <- function(df, att) {
plot <-ggplot(data = df, aes(x = att)) +
geom_histogram(aes(y = ..density..), binwidth = .5, colour = "blue", fill = "white", stat = 'count') #+
#    geom_density(alpha = .2, fill="#B10048") +
#  geom_vline(aes(xintercept = mean(att, na.rm = T)),
#            colour = "red", linetype ="longdash", size = .8)
return(plot)
}
x <- plots_dist(NFLSimplified, NFLSimplified$Comp)
x
View(x)
plot <-ggplot(data = NFLSimplified, aes(x = Att)) +
geom_histogram(aes(y = ..density..), binwidth = .5, colour = "blue", fill = "white", stat = 'count') #+
#    geom_density(alpha = .2, fill="#B10048") +
#  geom_vline(aes(xintercept = mean(att, na.rm = T)),
#            colour = "red", linetype ="longdash", size = .8)
plot
plot <-ggplot(data = NFLSimplified, aes(x = Att)) +
geom_histogram(binwidth = .5, colour = "blue", fill = "white", stat = 'count') #+
#    geom_density(alpha = .2, fill="#B10048") +
#  geom_vline(aes(xintercept = mean(att, na.rm = T)),
#            colour = "red", linetype ="longdash", size = .8)
plot
plots_dist <- function(df, att) {
plot <-ggplot(data = df, aes(x = att)) +
geom_histogram(aes(y = ..density..), binwidth = .5, colour = "blue", fill = "white") + geom_density(alpha = .2, fill="#B10048") +
#  geom_vline(aes(xintercept = mean(att, na.rm = T)),
#            colour = "red", linetype ="longdash", size = .8)
return(plot)
}
x <- plots_dist(NFLSimplified, NFLSimplified$Comp)
x
plot <-ggplot(data = NFLSimplified, aes(x = Att)) +
geom_histogram(binwidth = .5, colour = "blue", fill = "white", stat = 'count') #+
#    geom_density(alpha = .2, fill="#B10048") +
#  geom_vline(aes(xintercept = mean(att, na.rm = T)),
#            colour = "red", linetype ="longdash", size = .8)
plot
plots_dist <- function(df, att) {
plot <-ggplot(data = df, aes(x = att)) +
geom_histogram(aes(y = ..density..), binwidth = .5, colour = "blue", fill = "white") + geom_density(alpha = .2, fill="#B10048") +
#  geom_vline(aes(xintercept = mean(att, na.rm = T)),
#            colour = "red", linetype ="longdash", size = .8)
return(plot)
}
x <- plots_dist(NFLSimplified, NFLSimplified$Comp)
x
plots_dist <- function(df, att) {
plot <-ggplot(data = df, aes(x = att)) +
geom_histogram(aes(y = ..density..), binwidth = .5, colour = "blue", fill = "white")+
geom_density(alpha = .2, fill="#B10048")
#  geom_vline(aes(xintercept = mean(att, na.rm = T)),
#            colour = "red", linetype ="longdash", size = .8)
return(plot)
}
x <- plots_dist(NFLSimplified, NFLSimplified$Comp)
x
plots_dist <- function(df, att) {
plot <-ggplot(data = df, aes(x = att)) +
geom_histogram(aes(y = ..density..), binwidth = .5, colour = "blue", fill = "white")+
geom_density(alpha = .2, fill="#B10048") +
geom_vline(aes(xintercept = mean(att, na.rm = T)),
colour = "red", linetype ="longdash", size = .8)
return(plot)
}
x <- plots_dist(NFLSimplified, NFLSimplified$Comp)
x
plots_dist <- function(df, att) {
plot <-ggplot(data = df, aes(x = att)) +
geom_histogram(aes(y = ..density..), binwidth = .5, colour = "blue", fill = "white")+
geom_density(alpha = .2, fill="#B10048") +
geom_vline(aes(xintercept = mean(att, na.rm = T)),
colour = "red", linetype ="longdash", size = .8)
return(plot)
}
x <- plots_dist(NFLSimplified, NFLSimplified$Yds)
x
plots_dist <- function(df, att) {
plot <-ggplot(data = df, aes(x = att)) +
geom_histogram(aes(y = ..density..), binwidth = .5, colour = "blue", fill = "white")+
#    geom_density(alpha = .2, fill="#B10048") +
geom_vline(aes(xintercept = mean(att, na.rm = T)),
colour = "red", linetype ="longdash", size = .8)
return(plot)
}
x <- plots_dist(NFLSimplified, NFLSimplified$Yds)
x
plots_dist <- function(df, att) {
plot <-ggplot(data = df, aes(x = att)) +
geom_histogram( binwidth = .5, colour = "blue", fill = "white")+
#    geom_density(alpha = .2, fill="#B10048") +
geom_vline(aes(xintercept = mean(att, na.rm = T)),
colour = "red", linetype ="longdash", size = .8)
return(plot)
}
x <- plots_dist(NFLSimplified, NFLSimplified$Yds)
x
NFL$Yds <- sub(".", "", NFL$Yds)
View(NFL)
NFL <- NFL %>% select(-c(X, Lng))
NFL <- read.csv("nfl.csv", na = "--")
NFL <- NFL %>% select(-c(X, Lng))
NFL$Yds <- sub(".", "", NFL$Yds)
setwd("/Users/gather3/Documents/General Coding/NFL Data Analysis")
NFL <- read.csv("nfl.csv", na = "--")
NFL <- NFL %>% select(-c(X, Lng))
NFL$Yds <- gsub("\.", "", NFL$Yds)
setwd("/Users/gather3/Documents/General Coding/NFL Data Analysis")
NFL <- read.csv("nfl.csv", na = "--")
NFL <- NFL %>% select(-c(X, Lng))
NFL$Yds <- gsub("\.", "", NFL$Yds)
setwd("/Users/gather3/Documents/General Coding/NFL Data Analysis")
NFL <- read.csv("nfl.csv", na = "--")
NFL <- NFL %>% select(-c(X, Lng))
NFL$Yds <- gsub("\\.", "", NFL$Yds)
setwd("/Users/gather3/Documents/General Coding/NFL Data Analysis")
NFL <- read.csv("nfl.csv", na = "--")
NFL <- NFL %>% select(-c(X, Lng))
NFL$Yds <- gsub("\\.", "", NFL$Yds)
NFL <- read.csv("nfl.csv", na = "--")
NFL <- read.csv("nfl.csv", na = "--")
NFL <- NFL %>% select(-c(X, Lng))
NFL$Yds <- gsub("\\.", "", NFL$Yds)
setwd("/Users/gather3/Documents/General Coding/NFL Data Analysis")
NFL <- read.csv("nfl.csv", na = "--")
NFL <- NFL %>% select(-c(X, Lng))
NFL$Yds <- gsub("\\.", "", NFL$Yds)
NFLSimplified <- NFL %>%  select(c(Att, Comp, Pct, Yds, TD, Int))
NFL_CI95 <- data.frame(apply(NFLSimplified, 2, CI))
NFL_CI90 <- data.frame(apply(NFLSimplified, 2, function(x) CI(x, ci = 0.90)))
View(NFLSimplified)
View(NFL_CI90)
setwd("/Users/gather3/Documents/General Coding/NFL Data Analysis")
NFL <- read.csv("nfl.csv", na = "--")
NFL <- NFL %>% select(-c(X, Lng))
NFL$Yds <- gsub("\\.", "", NFL$Yds)
NFLSimplified <- NFL %>% select(c(Att, Comp, Pct, Yds, TD, Int))
View(NFLSimplified)
str(NFLSimplified)
setwd("/Users/gather3/Documents/General Coding/NFL Data Analysis")
NFL <- read.csv("nfl.csv", na = "--")
NFL <- NFL %>% select(-c(X, Lng))
NFL$Yds <- as.numeric(gsub("\\.", "", NFL$Yds))
NFL$Yds <- as.numeric(gsub("\\.", "", NFL$Yds))
str(NFLSimplified)
setwd("/Users/gather3/Documents/General Coding/NFL Data Analysis")
NFL <- read.csv("nfl.csv", na = "--")
NFL <- NFL %>% select(-c(X, Lng))
NFL$Yds <- as.numeric(gsub("\\.", "", NFL$Yds))
str(NFLSimplified)
str(NFL)
NFLSimplified <- NFL %>% select(c(Att, Comp, Pct, Yds, TD, Int))
NFL_CI95 <- data.frame(apply(NFLSimplified, 2, CI))
NFL_CI90 <- data.frame(apply(NFLSimplified, 2, function(x) CI(x, ci = 0.90)))
View(NFL_CI90)
plots_dist <- function(df, att) {
plot <-ggplot(data = df, aes(x = att)) +
geom_histogram(aes(y = ..density..), binwidth = .5, colour = "blue", fill = "white")+
#    geom_density(alpha = .2, fill="#B10048") +
geom_vline(aes(xintercept = mean(att, na.rm = T)),
colour = "red", linetype ="longdash", size = .8)
return(plot)
}
x <- plots_dist(NFLSimplified, NFLSimplified$Yds)
x
plots_dist <- function(df, att) {
plot <-ggplot(data = df, aes(x = att)) +
geom_histogram(aes(y = ..density..), binwidth = .5, colour = "blue", fill = "white")+
geom_density(alpha = .2, fill="#B10048") +
geom_vline(aes(xintercept = mean(att, na.rm = T)),
colour = "red", linetype ="longdash", size = .8)
return(plot)
}
x <- plots_dist(NFLSimplified, NFLSimplified$Yds)
x
plots_dist <- function(df, att) {
plot <-ggplot(data = df, aes(x = att)) +
geom_histogram(aes(y = ..density..), binwidth = .5, colour = "blue", fill = "white")+
geom_density(alpha = .2, fill="#B10048") +
geom_vline(aes(xintercept = mean(att, na.rm = T)),
colour = "red", linetype ="longdash", size = .8)
return(plot)
}
x <- plots_dist(NFLSimplified, NFLSimplified$Int)
x
shiny::runApp('~/Documents/Kanyama - Data Exploration/Kanyama Data Exploration/Shiny')
runApp('~/Documents/Sanitation-Hub')
runApp('~/Documents/Sanitation-Hub')
runApp('~/Documents/Sanitation-Hub')
runApp('~/Documents/Sanitation-Hub')
runApp('~/Documents/Sanitation-Hub')
runApp('~/Documents/Sanitation-Hub')
library(shiny)
library(dplyr)
library(leaflet)
library(ggplot2)
library(lubridate)
library(scales)
library(shinyWidgets)
library(shinythemes)
library(shinyjs)
library(RPostgreSQL)
library(pool)
library(shiny)
library(dplyr)
library(leaflet)
library(ggplot2)
library(lubridate)
library(scales)
library(shinyWidgets)
library(shinythemes)
library(shinyjs)
library(RPostgreSQL)
library(pool)
library(shiny)
library(dplyr)
library(leaflet)
library(ggplot2)
library(lubridate)
library(scales)
library(shinyWidgets)
library(shinythemes)
library(shinyjs)
library(RPostgreSQL)
library(pool)
setwd('/Users/gather3/Documents/Sanitation-Hub')
source('server_modules.R')
x <- loadFromDB()
View(x)
CategoricalStats(x)
dataset <- x %>% mutate_if(is.character, as.factor)
View(dataset)
CategoricalStats(x)
CategoricalStats(x)
dataset <- x %>% mutate_if(is.character, as.factor)
dataset <- dataset %>% summarise_if(!is.factor,
list("~length" = ~length(.) ,
"~unique values" = ~levels(.)))
dataset <- gather(dataset, "Name" , "Stats"  )
dataset <- separate(dataset, Name, c("Name","Metric"), sep = "~" )
dataset <- spread(dataset, "Metric", "Stats")
dataset <- select(dataset, c("Name", "length", "unique values"))
x <- loadFromDB()
dataset <- x %>% mutate_if(is.character, as.factor)
dataset <- dataset %>% summarise_if(!is.factor,
list("~length" = ~length(.) ,
"~unique values" = ~levels(.)))
View(dataset)
dataset <- dataset %>% summarise_if(is.factor,
list("~length" = ~length(.) ,
"~unique values" = ~levels(.)))
dataset <- x %>% mutate_if(is.character, as.factor)
View(dataset)
dataset <- dataset %>% summarise_if(is.factor,
list("~length" = ~length(.) ,
"~unique values" = ~levels(.)))
levels(dataset$city)
length(levels(dataset$city))
x <- loadFromDB()
dataset <- x %>% mutate_if(is.character, as.factor)
dataset <- dataset %>% summarise_if(is.factor,
list("~length" = ~length(.) ,
"~unique values" = ~length(levels(.))))
dataset <- gather(dataset, "Name" , "Stats"  )
dataset <- separate(dataset, Name, c("Name","Metric"), sep = "~" )
dataset <- spread(dataset, "Metric", "Stats")
dataset <- select(dataset, c("Name", "length", "unique values"))
View(dataset)
runApp()
CategoricalStats(x)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
cc <- scales::seq_gradient_pal("black", "#B10048", "Lab")(seq(0,1,length.out=100))
df <- x
ggplot(data = df, aes(x = reorder(type_of_toilet, number_users), y = number_users, fill = type_of_toilet)) +
geom_col() +
coord_flip() +
scale_fill_manual(vvalues = cc) +
labs(title = 'Type of Toilet vs Number of users',
y = 'Number of Users',
x = element_blank(),
fill = 'Type of Toilet') +
theme_minimal() +
theme(plot.title = element_text( face = 'bold', size = 26, hjust = 0.5, vjust = 0.3, colour = '#B10048'))
ggplot(data = df, aes(x = reorder(type_of_toilet, number_users), y = number_users, fill = type_of_toilet)) +
geom_col() +
coord_flip() +
scale_fill_manual(values = cc) +
labs(title = 'Type of Toilet vs Number of users',
y = 'Number of Users',
x = element_blank(),
fill = 'Type of Toilet') +
theme_minimal() +
theme(plot.title = element_text( face = 'bold', size = 26, hjust = 0.5, vjust = 0.3, colour = '#B10048'))
ggplot(data = df, aes(x = reorder(type_of_toilet, number_users), y = number_users, fill = type_of_toilet)) +
geom_col() +
coord_flip() +
labs(title = 'Type of Toilet vs Number of users',
y = 'Number of Users',
x = element_blank(),
fill = 'Type of Toilet') +
theme_minimal() +
theme(plot.title = element_text( face = 'bold', size = 26, hjust = 0.5, vjust = 0.3, colour = '#B10048'))
runApp()
runApp()
df <- x
df <- df %>% group_by(type_of_toilet) %>% summarise_if(is.numeric, mean, na.rm = T) %>% ungroup() %>% arrange(desc(number_users))
cc <- scales::seq_gradient_pal("white", "#B10048", "Lab")(seq(0,1,length.out=20))
plot_ly(df, labels = ~type_of_toilet, values = ~number_users, type = 'pie', colors = cc) %>%
layout(title = 'People using each type of toilet',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
cc <- c('red', 'blue', 'white')
plot_ly(df, labels = ~type_of_toilet, values = ~number_users, type = 'pie', colors = cc) %>%
layout(title = 'People using each type of toilet',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
cc <- scales::seq_gradient_pal("white", "#B10048", "Lab")(seq(0,1,length.out=20))
cc <- c('red', 'blue', 'white')
plot_ly(df, labels = ~type_of_toilet, values = ~number_users, type = 'pie',
layout(title = 'People using each type of toilet',
asdasdasdasdad
))
plot_ly(df, labels = ~type_of_toilet, values = ~number_users, type = 'pie',
marker = list(colors = cc)) %>%
layout(title = 'People using each type of toilet',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
cc <- scales::seq_gradient_pal("white", "#B10048", "Lab")(seq(0,1,length.out=20))
plot_ly(df, labels = ~type_of_toilet, values = ~number_users, type = 'pie',
marker = list(colors = cc)) %>%
layout(title = 'People using each type of toilet',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
runApp()
